# -*- coding: utf-8 -*-
"""eda.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yE4XUemrCuO9rI0zxdTbvuM6DiofDhke
"""

# Libraries
import numpy as np
import pandas as pd 

# Visualisation
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.figure_factory as ff
sns.set_theme(style="white")

# Load Data
csv = 'world_population.csv'
df = pd.read_csv(csv)

# Drop Null (if any)
df.dropna(inplace=True)

# Reset Index
df.reset_index(inplace=True,drop=True)

# View Data
df.head()

df.describe(include=np.number).transpose()

# Compute the correlation matrix
corr = df.iloc[:,1:].corr()

# Generate a mask for the upper triangle
mask = np.triu(np.ones_like(corr, dtype=bool))

# Set up the matplotlib figure
f, ax = plt.subplots(figsize=(11, 9))

# Generate a custom diverging colormap
cmap = sns.diverging_palette(235, 25, as_cmap=True)

# Draw the heatmap with the mask and correct aspect ratio
sns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,
            square=True, linewidths=.5, cbar_kws={"shrink": .5})

# Custom Function
def selectedFive(col):
    temp = df[['Country/Other', col]]
    temp.reset_index(inplace=True,drop=True)
    temp.sort_values(col, ascending=False, inplace=True, kind='stable')
    
    # Plot
    fig = make_subplots(rows=1, cols=2,
                    shared_yaxes=False,
                    horizontal_spacing=0.04)
    
    # Top 5
    fig.add_trace(go.Bar(x=temp['Country/Other'].head(), 
                     y=temp[col].head(),
                     name='Top 5 (highest)', marker_color='#37392E',
                     ), row=1, col=1)
    
    # Bottom 5
    fig.add_trace(go.Bar(x=temp['Country/Other'].tail(), 
                     y=temp[col].tail(),
                     name='Bottom 5 (lowest)', marker_color='#DDCECD',
                     ), row=1, col=2)
    
    fig.update_xaxes(nticks=25)
    fig.update_yaxes(nticks=5)
    fig.update_layout(title='Countries with highest & lowest '+col,                   
                  title_x=0.5,
                  titlefont_size=16)
    return fig.show()